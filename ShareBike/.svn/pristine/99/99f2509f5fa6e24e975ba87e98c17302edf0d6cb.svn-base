package com.panda.sharebike.ui.selfinfo;

import android.content.Intent;
import android.view.View;
import android.widget.TextView;

import com.blankj.utilcode.util.EmptyUtils;
import com.blankj.utilcode.util.ToastUtils;
import com.orhanobut.logger.Logger;
import com.panda.sharebike.Config;
import com.panda.sharebike.R;
import com.panda.sharebike.api.Api;
import com.panda.sharebike.api.HttpResult;
import com.panda.sharebike.api.Nsubscriber;
import com.panda.sharebike.model.entity.MemberwalletBean;
import com.panda.sharebike.model.entity.RechargeBean;
import com.panda.sharebike.ui.Iinterface.SubscriberListener;
import com.panda.sharebike.ui.base.BaseActivity;
import com.panda.sharebike.ui.login.RechargeMoneyActivity;

import butterknife.BindView;
import butterknife.OnClick;
import rx.android.schedulers.AndroidSchedulers;
import rx.schedulers.Schedulers;

/**
 * 我的钱包
 */
public class MyWalletActivity extends BaseActivity {
    @BindView(R.id.tv_balance)
    TextView tvBalance;
    @BindView(R.id.tv_deposit)
    TextView tvDeposit;
    private double money;
    @Override
    protected int getLayoutView() {
        return R.layout.activity_my_wallet;
    }

    @Override
    protected void setUpView() {
        super.setUpView();
        getMemberWallet();
    }

    @OnClick({R.id.btn_recharge, R.id.rl_deposit, R.id.rl_balance})
    public void onViewClicked(View view) {
        switch (view.getId()) {
            case R.id.btn_recharge:
                startActivity(new Intent(this, RechargeMoneyActivity.class));
                break;
            case R.id.rl_deposit:
                Intent intent = new Intent(this, ApplyRefundActivity.class);
                intent.putExtra("money", money);
                startActivity(intent);
                // finish();
                break;
            case R.id.rl_balance:
                startActivity(new Intent(this, BalanceDetailActivity.class));
                break;
        }
    }

    /**
     * 个人钱包页
     */
    private void getMemberWallet() {
        Api.getInstance().getDefault().getMemberWallet(Config.TOKEN)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Nsubscriber<HttpResult<MemberwalletBean>>(new SubscriberListener<HttpResult<MemberwalletBean>>() {
                    @Override
                    public void onSuccess(HttpResult<MemberwalletBean> model) {
                        Logger.e(model.getData().getDepositConfig() + "");
                        if (model.isOk()) {
                            money = model.getData().getDepositConfig();
                            tvBalance.setText(model.getData().getMemberBeenz() + "");
                            tvDeposit.setText(model.getData().getDepositConfig() + "元, 退押金");
                        } else if (EmptyUtils.isEmpty(model.getMsg())) {
                            ToastUtils.showShort(model.getMsg());
                        }
                    }

                    @Override
                    public void onFailure(String msg) {

                    }
                }, this, true));
    }

    /**
     * 充值
     */
    private void getRecharge(double money) {
        Api.getInstance().getDefault().getRecharge(Config.TOKEN, money)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Nsubscriber<HttpResult<RechargeBean>>(new SubscriberListener<HttpResult<RechargeBean>>() {
                    @Override
                    public void onSuccess(HttpResult<RechargeBean> model) {
                        if (model.isOk()) {

                        }
                    }

                    @Override
                    public void onFailure(String msg) {

                    }
                }, this, true));
    }
}
